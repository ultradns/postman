openapi: 3.0.3
info:
  title: API Documentation v1.1.1
  description: "This API specification provides an organized interface to the UltraDNS (UDNS) REST API. Endpoints are grouped
    by resource domain to support a logical, discoverable structure:\n\n- **Zones**: Manage DNS zones and resource records
    (create, read, update, delete)\n    \n- **Reports**: Retrieve analytics, usage, and query volume data\n    \n- **Other
    Resources**: Additional endpoints are grouped into relevant folders or sections based on functional area\n    \n\n## Authentication\n\
    \nThis API uses OAuth 2.0 (Password Credentials Grant) for authentication. To authenticate:\n\n1. Obtain an access token
    by exchanging your username and password at the token endpoint.\n    \n2. Include the token in the `Authorization` header
    of each request as a Bearer token.\n    \n\n``` http\nAuthorization: Bearer <access_token>\n\n ```\n\n## Usage\n\nEach
    resource group contains a set of RESTful endpoints, designed to be self-contained and independently testable. When interacting
    with this API refer to resource-specific sections for details on supported operations"
  version: 1.0.0
  contact: {}
servers:
- url: https://api.ultradns.com
  description: Primary UltraDNS API
paths:
  /authorization/token:
    post:
      tags:
      - Authorization
      summary: Manage Auth Token
      description: "Obtain or refresh an UltraDNS API access token using a single endpoint. This request supports two flows:\n\
        \n- **Initial authentication:** exchange a valid username and password (password grant) for an access token.\n   \
        \ \n- **Session continuation:** exchange a valid refresh token (refresh grant) for a new access token without re-supplying
        credentials.\n    \n\nUse the returned access token to authorize subsequent API calls until it expires."
      operationId: manageAuthToken
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                expire_in:
                  type: string
                  example: '86400'
                grant_type:
                  type: string
                  example: password
                password:
                  type: string
                  example: '{{password}}'
                refresh_token:
                  type: string
                  example: '{{refreshToken}}'
                username:
                  type: string
                  example: '{{username}}'
            examples:
              Manage Auth Token:
                value:
                  expire_in: '86400'
                  grant_type: password
                  password: '{{password}}'
                  refresh_token: '{{refreshToken}}'
                  username: '{{username}}'
      responses:
        '200':
          description: Refresh Token / Generate Auth Token
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '315'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Fri, 15 Aug 2025 13:54:44 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: 
                      q3hpnHtaHHfLzTq_.HFBMZ45a99dt5H_jOh0tLqrmDVhyCvE7EHlOe7DZ2F8.YvogkldtGkb9fNJ_vihT2ORGQpM_kRU7
                  access_token:
                    type: string
                    example: 
                      q3hpnHtaHHfLzTq_.HFBMZ45a99dt5H_jOh0tLqrmDVhyCvE7EHlOe7DZ2F8.YvogkldtGkb9fNJ_vihT2ORGQpM_kRU7
                  expiresIn:
                    type: string
                    example: '3600'
                  expires_in:
                    type: string
                    example: '3600'
                  refreshToken:
                    type: string
                    example: 729dd9ba9ddaeab58fcdb9615f50f5dadd715f4d72
                  refreshTokenExpiresIn:
                    type: string
                    example: '86400'
                  refresh_token:
                    type: string
                    example: 729dd9ba9ddaeab58fcdb9615f50f5dadd715f4d72
                  refresh_token_expires_in:
                    type: string
                    example: '86400'
                  tokenType:
                    type: string
                    example: Bearer
                  token_type:
                    type: string
                    example: Bearer
                  username:
                    type: string
                    example: postman-example
              examples:
                Generate Auth Token:
                  value:
                    accessToken: 
                      eolraOeTINu6WHeS.zUc4sS1vUKjzmKe9QyJecMeG1XN1TqwI3eXGC0sRbco.3VjD74_dMLWk2ec3vUXPUcIb4zH3K4fS
                    access_token: 
                      eolraOeTINu6WHeS.zUc4sS1vUKjzmKe9QyJecMeG1XN1TqwI3eXGC0sRbco.3VjD74_dMLWk2ec3vUXPUcIb4zH3K4fS
                    expiresIn: '3600'
                    expires_in: '3600'
                    refreshToken: 2b217543b15fdedffe95387ff0a383d47ab37615d7
                    refresh_token: 2b217543b15fdedffe95387ff0a383d47ab37615d7
                    tokenType: Bearer
                    token_type: Bearer
                    username: postman-example
                Refresh Token:
                  value:
                    accessToken: 
                      q3hpnHtaHHfLzTq_.HFBMZ45a99dt5H_jOh0tLqrmDVhyCvE7EHlOe7DZ2F8.YvogkldtGkb9fNJ_vihT2ORGQpM_kRU7
                    access_token: 
                      q3hpnHtaHHfLzTq_.HFBMZ45a99dt5H_jOh0tLqrmDVhyCvE7EHlOe7DZ2F8.YvogkldtGkb9fNJ_vihT2ORGQpM_kRU7
                    expiresIn: '3600'
                    expires_in: '3600'
                    refreshToken: 729dd9ba9ddaeab58fcdb9615f50f5dadd715f4d72
                    refreshTokenExpiresIn: '86400'
                    refresh_token: 729dd9ba9ddaeab58fcdb9615f50f5dadd715f4d72
                    refresh_token_expires_in: '86400'
                    tokenType: Bearer
                    token_type: Bearer
                    username: postman-example
      security:
      - {}
  /version:
    get:
      tags:
      - Platform
      summary: Get Version
      description: "The version call provides the version of the REST API currently in production.\n\nThis call does not require
        an Authorization header to be specified, which allows it to be used to verify that there are no networking issues
        between a client and the REST API server."
      operationId: getVersion
      responses:
        '200':
          description: Get Version
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 13 Aug 2025 19:17:07 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  version:
                    type: string
                    example: 3.108.0-20250804151109.a1bbd8c
              examples:
                Get Version:
                  value:
                    version: 3.108.0-20250804151109.a1bbd8c
      security:
      - {}
  /status:
    get:
      tags:
      - Platform
      summary: Get Status
      description: "The status call provides a simple way to determine if the REST API  \nis running, and to make sure you
        are connecting to the UltraDNS Portal  \nwith proper authorization."
      operationId: getStatus
      responses:
        '200':
          description: Get Status
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 13 Aug 2025 15:00:17 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Good
              examples:
                Get Status:
                  value:
                    message: Good
  /v3/zones:
    get:
      tags:
      - Zones
      summary: List Zones
      description: Retrieves all DNS zones in your account. The response returns an array of zone objects, each 
        including details such as zone name, status, default TTL, and name servers.
      operationId: listZones
      responses:
        '200':
          description: List Zones
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '270'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:49:15 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  cursorInfo:
                    type: object
                    properties: {}
                  queryInfo:
                    type: object
                    properties:
                      limit:
                        type: number
                        example: 100
                      q:
                        type: string
                        example: ''
                      reverse:
                        type: boolean
                        example: false
                      sort:
                        type: string
                        example: name
                  zones:
                    type: array
                    items:
                      type: object
                      properties:
                        properties:
                          type: object
                          properties:
                            accountName:
                              type: string
                              example: postman-example
                            dnssecStatus:
                              type: string
                              example: UNSIGNED
                            lastModifiedDateTime:
                              type: string
                              example: 2025-06-17T23:48Z
                            name:
                              type: string
                              example: domain.com.
                            owner:
                              type: string
                              example: postman-example
                            resourceRecordCount:
                              type: number
                              example: 7
                            status:
                              type: string
                              example: ACTIVE
                            type:
                              type: string
                              example: PRIMARY
                            ultra2:
                              type: boolean
                              example: false
                    example:
                    - properties:
                        accountName: postman-example
                        dnssecStatus: UNSIGNED
                        lastModifiedDateTime: 2025-06-17T23:48Z
                        name: domain.com.
                        owner: postman-example
                        resourceRecordCount: 7
                        status: ACTIVE
                        type: PRIMARY
                        ultra2: false
                    - properties:
                        accountName: postman-example
                        dnssecStatus: UNSIGNED
                        lastModifiedDateTime: 2025-06-17T23:43Z
                        name: postman-example.xyz.
                        owner: postman-example
                        resourceRecordCount: 7
                        status: ACTIVE
                        type: PRIMARY
                        ultra2: false
              examples:
                List Zones:
                  value:
                    cursorInfo: {}
                    queryInfo:
                      limit: 100
                      q: ''
                      reverse: false
                      sort: name
                    zones:
                    - properties:
                        accountName: postman-example
                        dnssecStatus: UNSIGNED
                        lastModifiedDateTime: 2025-06-17T23:48Z
                        name: domain.com.
                        owner: postman-example
                        resourceRecordCount: 7
                        status: ACTIVE
                        type: PRIMARY
                        ultra2: false
                    - properties:
                        accountName: postman-example
                        dnssecStatus: UNSIGNED
                        lastModifiedDateTime: 2025-06-17T23:43Z
                        name: postman-example.xyz.
                        owner: postman-example
                        resourceRecordCount: 7
                        status: ACTIVE
                        type: PRIMARY
                        ultra2: false
    post:
      tags:
      - Zones
      summary: Create Zone
      description: "Creates a new DNS zone. The request body must include:\n\n- **properties.name**: zones_zoneName (the name
        of the new zone)\n    \n- **properties.accountName**: username (your UltraDNS account)\n    \n- **properties.type**:
        PRIMARY\n    \n- **primaryCreateInfo.forceImport**: true or false\n    \n- **primaryCreateInfo.createType**: NEW or
        IMPORT\n    \n- **changeComment**: free‑form text describing why the zone is being created\n    \n\nMake sure the
        environment variables zones_zoneName and username are set before running this request."
      operationId: createZone
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                changeComment:
                  type: string
                  example: Create zone as agreed
                primaryCreateInfo:
                  type: object
                  properties:
                    createType:
                      type: string
                      example: NEW
                    forceImport:
                      type: boolean
                      example: true
                properties:
                  type: object
                  properties:
                    accountName:
                      type: string
                      example: '{{username}}'
                    name:
                      type: string
                      example: '{{zones_zoneName}}'
                    type:
                      type: string
                      example: PRIMARY
            examples:
              Create Zone:
                value:
                  changeComment: Create zone as agreed
                  primaryCreateInfo:
                    createType: NEW
                    forceImport: true
                  properties:
                    accountName: '{{username}}'
                    name: '{{zones_zoneName}}'
                    type: PRIMARY
      responses:
        '201':
          description: Create Zone
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '42'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:48:11 GMT
            Location:
              schema:
                type: string
                example: http://api.ultradns.com/v3/zones/domain.com.
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Create Zone:
                  value:
                    message: Successful
  /v3/zones/{zones_zoneName}:
    get:
      tags:
      - Zones
      summary: List Zone Properties
      description: Retrieves metadata for a specific DNS zone, including record count, name servers, status, type, and 
        other zone‑level properties. Requires the `zones_zoneName` path variable.
      operationId: listZoneProperties
      responses:
        '200':
          description: List Zone Properties
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:48:57 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  inherit:
                    type: string
                    example: ALL
                  properties:
                    type: object
                    properties:
                      accountName:
                        type: string
                        example: postman-example
                      dnssecStatus:
                        type: string
                        example: UNSIGNED
                      lastModifiedDateTime:
                        type: string
                        example: 2025-06-17T23:48Z
                      name:
                        type: string
                        example: domain.com.
                      owner:
                        type: string
                        example: postman-example
                      resourceRecordCount:
                        type: number
                        example: 7
                      status:
                        type: string
                        example: ACTIVE
                      type:
                        type: string
                        example: PRIMARY
                  registrarInfo:
                    type: object
                    properties:
                      nameServers:
                        type: object
                        properties:
                          missing:
                            type: array
                            items:
                              type: string
                              example: pdns1.ultradns.net.
                            example:
                            - pdns1.ultradns.net.
                            - pdns2.ultradns.net.
                            - pdns3.ultradns.org.
                            - pdns4.ultradns.org.
                            - pdns5.ultradns.info.
                            - pdns6.ultradns.co.uk.
              examples:
                List Zone Properties:
                  value:
                    inherit: ALL
                    properties:
                      accountName: postman-example
                      dnssecStatus: UNSIGNED
                      lastModifiedDateTime: 2025-06-17T23:48Z
                      name: domain.com.
                      owner: postman-example
                      resourceRecordCount: 7
                      status: ACTIVE
                      type: PRIMARY
                    registrarInfo:
                      nameServers:
                        missing:
                        - pdns1.ultradns.net.
                        - pdns2.ultradns.net.
                        - pdns3.ultradns.org.
                        - pdns4.ultradns.org.
                        - pdns5.ultradns.info.
                        - pdns6.ultradns.co.uk.
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
  /v3/zones/{zones_zoneName}/webforwards:
    get:
      tags:
      - Zones
      summary: List Zone Web Forwards
      description: "Retrieves all web‑forward rules configured for a specific DNS zone. Requires the `zone_zoneName` environment
        variable. The response returns an array of web‑forward objects, each including fields such as:\n\n- `guid` (the forward’s
        unique ID)\n    \n- `requestTo` (the hostname being forwarded)\n    \n- `defaultRedirectTo` (the target URL)\n   \
        \ \n- `defaultForwardType` (301, 302, etc.)"
      operationId: listZoneWebForwards
      responses:
        '200':
          description: List Zone Web Forwards
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '228'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:50:27 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryInfo:
                    type: object
                    properties:
                      limit:
                        type: number
                        example: 100
                      reverse:
                        type: boolean
                        example: false
                      sort:
                        type: string
                        example: REQUEST_TO
                  resultInfo:
                    type: object
                    properties:
                      offset:
                        type: number
                        example: 0
                      returnedCount:
                        type: number
                        example: 1
                      totalCount:
                        type: number
                        example: 1
                  webForwards:
                    type: array
                    items:
                      type: object
                      properties:
                        defaultForwardType:
                          type: string
                          example: HTTP_301_REDIRECT
                        defaultRedirectTo:
                          type: string
                          example: https://www.example.com
                        guid:
                          type: string
                          example: 9034F201636B98D9
                        requestTo:
                          type: string
                          example: www.domain.com
                    example:
                    - defaultForwardType: HTTP_301_REDIRECT
                      defaultRedirectTo: https://www.example.com
                      guid: 9034F201636B98D9
                      requestTo: www.domain.com
              examples:
                List Zone Web Forwards:
                  value:
                    queryInfo:
                      limit: 100
                      reverse: false
                      sort: REQUEST_TO
                    resultInfo:
                      offset: 0
                      returnedCount: 1
                      totalCount: 1
                    webForwards:
                    - defaultForwardType: HTTP_301_REDIRECT
                      defaultRedirectTo: https://www.example.com
                      guid: 9034F201636B98D9
                      requestTo: www.domain.com
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
  /v3/zones/export:
    post:
      tags:
      - Zones
      summary: Initiate Zone(s) Export
      description: "Initiates an export job for the specified DNS zone. Requires the `zones_zoneName` environment variable.\n\
        \nOn success, returns **202 Accepted** with an `x-task-id` header containing the export job ID. Use the Task endpoints
        to poll for status and retrieve the exported zone file."
      operationId: initiateZoneSExport
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                zoneNames:
                  type: array
                  items:
                    type: string
                    example: '{{zones_zoneName}}'
                  example:
                  - '{{zones_zoneName}}'
            examples:
              Initiate Zone(s) Export:
                value:
                  zoneNames:
                  - '{{zones_zoneName}}'
      responses:
        '202':
          description: Initiate Zone(s) Export
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:50:35 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Task-Id:
              schema:
                type: string
                example: 7c59fe98-1451-4f4a-8195-ed6690792a90
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Pending
              examples:
                Initiate Zone(s) Export:
                  value:
                    message: Pending
  /v1/zones/{zones_zoneName}/snapshot:
    post:
      tags:
      - Zones
      summary: Create Snapshot
      description: "Creates a point‑in‑time snapshot of the specified DNS zone, replacing any existing snapshot. Requires
        the `zones_zoneName` environment variable.\n\n- On success, returns **202 Accepted** with an `x-task-id` header containing
        the snapshot job ID\n    \n- Use the Task endpoints to poll for status and confirm completion before attempting to
        restore or export the snapshot"
      operationId: createSnapshot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Create Snapshot:
                value: {}
      responses:
        '202':
          description: Create Snapshot
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '0'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:50:49 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Task-Id:
              schema:
                type: string
                example: 2df0aa54-cc3a-4724-943d-eb33c302cf2a
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                Create Snapshot:
                  value: ''
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
  /v1/zones/{zones_zoneName}/restore:
    post:
      tags:
      - Zones
      summary: Restore Snapshot
      description: "Restores the specified DNS zone to its most recent snapshot, overwriting the current configuration. This
        action is **destructive and irreversible**. Requires the `zones_zoneName` environment variable.\n\nOn success, returns
        **202 Accepted** with an `x-task-id` header containing the restore job ID. Use the Task endpoints to poll for status
        and confirm completion."
      operationId: restoreSnapshot
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              Restore Snapshot:
                value: {}
      responses:
        '202':
          description: Restore Snapshot
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '0'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:51:03 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Task-Id:
              schema:
                type: string
                example: 7418858e-f915-44cb-ae54-a56cb37cb99b
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                Restore Snapshot:
                  value: ''
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
  /zones/{zones_zoneName}/transfer:
    post:
      tags:
      - Zones
      summary: Request Zone Transfer
      description: "Requests a synchronization of the specified secondary DNS zone. Requires the `zones_zoneName` environment
        variable.\n\nOn success, returns **200 OK**. You can verify the transfer by fetching the zone details and checking
        the serial or record changes."
      operationId: requestZoneTransfer
      responses:
        '200':
          description: Request Zone Transfer
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:47:34 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Request Zone Transfer:
                  value:
                    message: Successful
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
  /zones/{records_zoneName}/rrsets:
    get:
      tags:
      - Records
      summary: List RRsets
      description: "Retrieves all resource record sets (RRSets) in the specified DNS zone. Requires the `records_zoneName`
        environment variable.\n\nSupports optional query parameters to filter results (for example, by record type, ownerName,
        TTL) or paginate the list."
      operationId: listRrsets
      responses:
        '200':
          description: List RRsets
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '301'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:52:04 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryInfo:
                    type: object
                    properties:
                      limit:
                        type: number
                        example: 100
                      reverse:
                        type: boolean
                        example: false
                      sort:
                        type: string
                        example: OWNER
                  resultInfo:
                    type: object
                    properties:
                      offset:
                        type: number
                        example: 0
                      returnedCount:
                        type: number
                        example: 3
                      totalCount:
                        type: number
                        example: 3
                  rrSets:
                    type: array
                    items:
                      type: object
                      properties:
                        ownerName:
                          type: string
                          example: domain.com.
                        rdata:
                          type: array
                          items:
                            type: string
                            example: pdns1.ultradns.net.
                          example:
                          - pdns1.ultradns.net.
                          - pdns2.ultradns.net.
                          - pdns3.ultradns.org.
                          - pdns4.ultradns.org.
                          - pdns5.ultradns.info.
                          - pdns6.ultradns.co.uk.
                        rrtype:
                          type: string
                          example: NS (2)
                        ttl:
                          type: number
                          example: 86400
                    example:
                    - ownerName: domain.com.
                      rdata:
                      - pdns1.ultradns.net.
                      - pdns2.ultradns.net.
                      - pdns3.ultradns.org.
                      - pdns4.ultradns.org.
                      - pdns5.ultradns.info.
                      - pdns6.ultradns.co.uk.
                      rrtype: NS (2)
                      ttl: 86400
                    - ownerName: domain.com.
                      rdata:
                      - pdns1.ultradns.net. shane\.barbetta.digicert.com. 2025061702 86400 86400 86400 86400
                      rrtype: SOA (6)
                      ttl: 86400
                    - ownerName: www.domain.com.
                      rdata:
                      - 204.74.99.100
                      rrtype: A (1)
                      ttl: 300
                  zoneName:
                    type: string
                    example: domain.com
              examples:
                List RRsets:
                  value:
                    queryInfo:
                      limit: 100
                      reverse: false
                      sort: OWNER
                    resultInfo:
                      offset: 0
                      returnedCount: 3
                      totalCount: 3
                    rrSets:
                    - ownerName: domain.com.
                      rdata:
                      - pdns1.ultradns.net.
                      - pdns2.ultradns.net.
                      - pdns3.ultradns.org.
                      - pdns4.ultradns.org.
                      - pdns5.ultradns.info.
                      - pdns6.ultradns.co.uk.
                      rrtype: NS (2)
                      ttl: 86400
                    - ownerName: domain.com.
                      rdata:
                      - pdns1.ultradns.net. shane\.barbetta.digicert.com. 2025061702 86400 86400 86400 86400
                      rrtype: SOA (6)
                      ttl: 86400
                    - ownerName: www.domain.com.
                      rdata:
                      - 204.74.99.100
                      rrtype: A (1)
                      ttl: 300
                    zoneName: domain.com
    parameters:
    - name: records_zoneName
      in: path
      required: true
      schema:
        type: string
  /zones/{records_zoneName}/rrsets/{records_type}:
    get:
      tags:
      - Records
      summary: List Records by Type
      description: Retrieves all resource record sets (RRSets) of a specific type within the specified DNS zone. 
        Requires the `records_zoneName` and `records_type` environment variables. Set `records_type` to the desired 
        record type (e.g., A, CNAME, TXT) to filter the results. The response returns an array of matching RRSet 
        objects.
      operationId: listRecordsByType
      responses:
        '200':
          description: List Records by Type
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:52:27 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryInfo:
                    type: object
                    properties:
                      limit:
                        type: number
                        example: 100
                      reverse:
                        type: boolean
                        example: false
                      sort:
                        type: string
                        example: OWNER
                  resultInfo:
                    type: object
                    properties:
                      offset:
                        type: number
                        example: 0
                      returnedCount:
                        type: number
                        example: 1
                      totalCount:
                        type: number
                        example: 1
                  rrSets:
                    type: array
                    items:
                      type: object
                      properties:
                        ownerName:
                          type: string
                          example: www.domain.com.
                        rdata:
                          type: array
                          items:
                            type: string
                            example: 204.74.99.100
                          example:
                          - 204.74.99.100
                        rrtype:
                          type: string
                          example: A (1)
                        ttl:
                          type: number
                          example: 300
                    example:
                    - ownerName: www.domain.com.
                      rdata:
                      - 204.74.99.100
                      rrtype: A (1)
                      ttl: 300
                  zoneName:
                    type: string
                    example: domain.com
              examples:
                List Records by Type:
                  value:
                    queryInfo:
                      limit: 100
                      reverse: false
                      sort: OWNER
                    resultInfo:
                      offset: 0
                      returnedCount: 1
                      totalCount: 1
                    rrSets:
                    - ownerName: www.domain.com.
                      rdata:
                      - 204.74.99.100
                      rrtype: A (1)
                      ttl: 300
                    zoneName: domain.com
    parameters:
    - name: records_zoneName
      in: path
      required: true
      schema:
        type: string
    - name: records_type
      in: path
      required: true
      schema:
        type: string
  /v3/zones/{records_zoneName}/rrsets:
    get:
      tags:
      - Records
      summary: List Pools
      description: Retrieves all traffic‑management pools (RRSets configured for advanced DNS features) in the specified
        DNS zone. Requires the `records_zoneName` environment variable. The response returns an array of pool RRSet 
        objects, each including its pool-specific metadata.
      operationId: listPools
      parameters:
      - name: q
        in: query
        schema:
          type: string
          example: kind:POOLS
      responses:
        '200':
          description: List Pools
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:53:55 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  queryInfo:
                    type: object
                    properties:
                      limit:
                        type: number
                        example: 100
                      q:
                        type: string
                        example: kind:POOLS
                      reverse:
                        type: boolean
                        example: false
                      sort:
                        type: string
                        example: OWNER
                  resultInfo:
                    type: object
                    properties:
                      offset:
                        type: number
                        example: 0
                      returnedCount:
                        type: number
                        example: 1
                      totalCount:
                        type: number
                        example: 1
                  rrSets:
                    type: array
                    items:
                      type: object
                      properties:
                        ownerName:
                          type: string
                          example: pool.domain.com.
                        profile:
                          type: object
                          properties:
                            '@context':
                              type: string
                              example: http://schemas.ultradns.com/DirPool.jsonschema
                            description:
                              type: string
                              example: pool
                            rdataInfo:
                              type: array
                              items:
                                type: object
                                properties:
                                  allNonConfigured:
                                    type: boolean
                                    example: true
                                  ttl:
                                    type: number
                                    example: 86400
                                  type:
                                    type: string
                                    example: A
                              example:
                              - allNonConfigured: true
                                ttl: 86400
                                type: A
                        rdata:
                          type: array
                          items:
                            type: string
                            example: 192.168.1.1
                          example:
                          - 192.168.1.1
                        rrtype:
                          type: string
                          example: A (1)
                    example:
                    - ownerName: pool.domain.com.
                      profile:
                        '@context': http://schemas.ultradns.com/DirPool.jsonschema
                        description: pool
                        rdataInfo:
                        - allNonConfigured: true
                          ttl: 86400
                          type: A
                      rdata:
                      - 192.168.1.1
                      rrtype: A (1)
                  zoneName:
                    type: string
                    example: domain.com
              examples:
                List Pools:
                  value:
                    queryInfo:
                      limit: 100
                      q: kind:POOLS
                      reverse: false
                      sort: OWNER
                    resultInfo:
                      offset: 0
                      returnedCount: 1
                      totalCount: 1
                    rrSets:
                    - ownerName: pool.domain.com.
                      profile:
                        '@context': http://schemas.ultradns.com/DirPool.jsonschema
                        description: pool
                        rdataInfo:
                        - allNonConfigured: true
                          ttl: 86400
                          type: A
                      rdata:
                      - 192.168.1.1
                      rrtype: A (1)
                    zoneName: domain.com
    parameters:
    - name: records_zoneName
      in: path
      required: true
      schema:
        type: string
  /zones/{records_zoneName}/rrsets/{records_type}/{records_ownerName}:
    put:
      tags:
      - Records
      summary: Update RRset
      description: "Updates an existing resource record set (RRSet) in the specified DNS zone.\n\n- **Required variables:**\n\
        \    \n    - records_zoneName – the DNS zone containing the RRSet\n        \n    - records_ownerName – the owner name
        (record label) of the RRSet\n        \n    - records_type – the record type (A, CNAME, MX, etc.)\n        \n- **Body
        construction:**\n    \n    A pre-request script builds the `requestBody` object with your `recordTtl` and `recordRdata`,
        stringifies it, and sets it to the `requestBody` environment variable. Any records not included in this body will
        be removed from the RRSet."
      operationId: updateRrset
      requestBody:
        content:
          application/json:
            examples:
              Update RRset:
                value: '{{requestBody}}'
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Update RRset
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:54:50 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Update RRset:
                  value:
                    message: Successful
    post:
      tags:
      - Records
      summary: Create RRset
      description: "Creates a new resource record set (RRSet) in the specified DNS zone.\n\n- **Required variables:**\n  \
        \  \n    - `records_zoneName` – target DNS zone\n        \n    - `records_ownerName` – owner name (record label)\n\
        \        \n    - `records_type` – record type (A, CNAME, MX, etc.)\n        \n- **Body construction:**  \n    A pre‑request
        script reads these environment vars plus:\n    \n    - `recordTtl` (default “300”)\n        \n    - `recordRdata`
        (e.g. “1.1.1.1” for A records)  \n        It builds an object (`{ ttl: recordTtl, rdata: [ recordRdata ] }`), stringifies
        it, and sets it to the `requestBody` environment variable."
      operationId: createRrset
      requestBody:
        content:
          application/json:
            examples:
              Create RRset:
                value: '{{requestBody}}'
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: Create RRset
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:54:23 GMT
            Location:
              schema:
                type: string
                example: http://api.ultradns.com/zones/domain.com/rrsets/A/rrset-create
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Create RRset:
                  value:
                    message: Successful
    delete:
      tags:
      - Records
      summary: Delete RRset
      description: "Deletes the specified resource record set (RRSet) from the given DNS zone.\n\n- **Required variables:**\n\
        \    \n    - records_zoneName – the DNS zone containing the RRSet\n        \n    - records_ownerName – the owner name
        (record label) of the RRSet\n        \n    - records_type – the record type (A, CNAME, TXT, etc.)"
      operationId: deleteRrset
      responses:
        '204':
          description: Delete RRset
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:56:08 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                Delete RRset:
                  value: ''
    parameters:
    - name: records_zoneName
      in: path
      required: true
      schema:
        type: string
    - name: records_type
      in: path
      required: true
      schema:
        type: string
    - name: records_ownerName
      in: path
      required: true
      schema:
        type: string
  /tasks/{currentTask}:
    get:
      tags:
      - Tasks
      summary: Check Task
      description: Checks the status of a background task. Requires the `currentTask` variable, which the collection 
        automatically populates from the x-task-id header of previous async operations.
      operationId: checkTask
      responses:
        '200':
          description: Check Task
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:57:42 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    example: COMPLETE
                  hasData:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: domain.com. export completed.
                  resultUri:
                    type: string
                    example: /tasks/605b23e4-edb9-4f23-ae2d-33fe24d6033f/result
                  taskId:
                    type: string
                    example: 605b23e4-edb9-4f23-ae2d-33fe24d6033f
              examples:
                Check Task:
                  value:
                    code: COMPLETE
                    hasData: true
                    message: domain.com. export completed.
                    resultUri: /tasks/605b23e4-edb9-4f23-ae2d-33fe24d6033f/result
                    taskId: 605b23e4-edb9-4f23-ae2d-33fe24d6033f
    parameters:
    - name: currentTask
      in: path
      required: true
      schema:
        type: string
  /tasks/{currentTask}/result:
    get:
      tags:
      - Tasks
      summary: Task Result
      description: Retrieves the final result of a completed background task. Requires the `currentTask` variable, which
        the collection automatically populates from the x-task-id header of prior async requests. Returns the task’s 
        result payload when finished.
      operationId: taskResult
      responses:
        '200':
          description: Task Result
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Expose-Headers:
              schema:
                type: string
                example: Content-Disposition
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Disposition:
              schema:
                type: string
                example: inline;filename="605b23e4-edb9-4f23-ae2d-33fe24d6033f.txt"
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '258'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:57:51 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                Task Result:
                  value: ";File created: 06/17/2025 23:57\r\n;Record count: 8\r\n$ORIGIN domain.com.\r\n@\t86400\tIN\tSOA
                    pdns1.ultradns.net. shane\\.barbetta.digicert.com. (\r\n\t\t\t2025061707\t;Serial\r\n\t\t\t86400\t\t;Refresh\r\
                    \n\t\t\t86400\t\t;Retry\r\n\t\t\t86400\t\t;Expire\r\n\t\t\t86400\t\t;Minimum\r\n\t\t)\r\n@\t86400\tIN\t\
                    NS\tpdns1.ultradns.net.\r\n@\t86400\tIN\tNS\tpdns2.ultradns.net.\r\n@\t86400\tIN\tNS\tpdns3.ultradns.org.\r\
                    \n@\t86400\tIN\tNS\tpdns4.ultradns.org.\r\n@\t86400\tIN\tNS\tpdns5.ultradns.info.\r\n@\t86400\tIN\tNS\t\
                    pdns6.ultradns.co.uk.\r\nwww\t300\tIN\tA\t204.74.99.100\r\n"
    parameters:
    - name: currentTask
      in: path
      required: true
      schema:
        type: string
  /v1/reports/dns_resolution/query_volume/host:
    post:
      tags:
      - Reports
      summary: Create NXDomain Report
      description: "Retrieves an advanced NXDOMAIN report, breaking down “no-such-domain” responses by host over a specified
        date range. This call is asynchronous and returns a JSON payload containing a `requestId` (saved automatically to
        `reports_requestId`). If you don’t set `reports_startDate` or `reports_endDate`, a pre-request script defaults them
        to the last 30 days.\n\n**Required variables**\n\n- `reports_startDate` – report start date (YYYY-MM-DD)\n    \n-
        `reports_endDate` – report end date (YYYY-MM-DD)\n    \n- `zones_zoneName` – DNS zone to include in the report\n \
        \   \n\n**Query parameters**\n\n- `advance=true` – enable advanced reporting mode\n    \n- `reportType=ADVANCED_NXDOMAINS`
        – select the NXDOMAIN breakdown report\n    \n- `limit` (optional) – maximum number of host entries to return\n  \
        \  \n\n**Request body**\n\n- `hostQueryVolume`: object with `startDate`, `endDate`, and a `zoneNames` array\n    \n\
        - `sortFields`: maps field names (e.g., `nxdomainCount`) to `\"ASC\"` (ascending) or `\"DESC\"` (descending) to control
        result order\n    \n\nOnce invoked, note that the response’s `requestId` is stored in `reports_requestId`. Use that
        ID with the Reports “Retrieve Report” endpoint to poll for status and retrieve the completed data."
      operationId: createNxdomainReport
      parameters:
      - name: advance
        in: query
        schema:
          type: string
          example: 'true'
      - name: reportType
        in: query
        schema:
          type: string
          example: ADVANCED_NXDOMAINS
      - name: limit
        in: query
        schema:
          type: string
          example: '100000'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                hostQueryVolume:
                  type: object
                  properties:
                    endDate:
                      type: string
                      example: '{{reports_endDate}}'
                    startDate:
                      type: string
                      example: '{{reports_startDate}}'
                    zoneNames:
                      type: array
                      items:
                        type: string
                        example: '{{zones_zoneName}}'
                      example:
                      - '{{zones_zoneName}}'
                sortFields:
                  type: object
                  properties:
                    nxdomainCount:
                      type: string
                      example: DESC
            examples:
              Create NXDomain Report:
                value:
                  hostQueryVolume:
                    endDate: '{{reports_endDate}}'
                    startDate: '{{reports_startDate}}'
                    zoneNames:
                    - '{{zones_zoneName}}'
                  sortFields:
                    nxdomainCount: DESC
      responses:
        '201':
          description: Create NXDomain Report
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '60'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:48:01 GMT
            Location:
              schema:
                type: string
                example: https://api.ultradns.com/v1/requests/HQV_NXD-f8a26553-33f3-4305-af81-ecbedd010a96
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                    example: HQV_NXD-f8a26553-33f3-4305-af81-ecbedd010a96
              examples:
                Create NXDomain Report:
                  value:
                    requestId: HQV_NXD-f8a26553-33f3-4305-af81-ecbedd010a96
  /reports/dns_resolution/query_volume/zone/no_queries:
    post:
      tags:
      - Reports
      summary: Zero Query Report
      description: "Retrieves a Zero‑Query report listing all zones under a specified account that received no DNS queries
        in the given date range. This call is asynchronous and returns a JSON payload containing a `requestId`, which is saved
        to `reports_requestId` by the collection. If you omit `reports_startDate` or `reports_endDate`, they default to the
        last 30 days.\n\n**Required variables**\n\n- `accountName` – the account to report on (e.g., use `subaccounts_accountName`
        or any accessible account)\n    \n- `reports_startDate` – report start date (YYYY-MM-DD)\n    \n- `reports_endDate`
        – report end date (YYYY-MM-DD)\n    \n- `wrap` – boolean (true to wrap results in an envelope)\n    \n\nOnce invoked,
        pass the returned `requestId` to the Reports “Retrieve Report” endpoint to poll for completion and retrieve the final
        data."
      operationId: zeroQueryReport
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                zeroZoneQueryVolume:
                  type: object
                  properties:
                    accountName:
                      type: string
                      example: '{{subaccounts_accountName}}'
                    reportEndDate:
                      type: string
                      example: '{{reports_endDate}}'
                    reportStartDate:
                      type: string
                      example: '{{reports_startDate}}'
                    wrap:
                      type: boolean
                      example: true
            examples:
              Zero Query Report:
                value:
                  zeroZoneQueryVolume:
                    accountName: '{{subaccounts_accountName}}'
                    reportEndDate: '{{reports_endDate}}'
                    reportStartDate: '{{reports_startDate}}'
                    wrap: true
      responses:
        '201':
          description: Zero Query Report
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '62'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:59:01 GMT
            Location:
              schema:
                type: string
                example: https://api.ultradns.com/requests/ZQZV_WRAP-e8f4485d-060c-446e-8fe1-f3a83cf52b33
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  requestId:
                    type: string
                    example: ZQZV_WRAP-e8f4485d-060c-446e-8fe1-f3a83cf52b33
              examples:
                Zero Query Report:
                  value:
                    requestId: ZQZV_WRAP-e8f4485d-060c-446e-8fe1-f3a83cf52b33
  /v1/requests/{reports_requestId}:
    get:
      tags:
      - Reports
      summary: Retrieve Report
      description: Retrieves the results of a previously generated report. Requires the `reports_requestId` variable, 
        which the collection automatically populates from the report creation response. Returns the report data payload 
        once complete, or status and error details if still processing or failed.
      operationId: retrieveReport
      responses:
        '200':
          description: Retrieve Report
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '23'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Tue, 17 Jun 2025 23:59:17 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                Retrieve Report:
                  value: "Zone Name,Account Name\n"
    parameters:
    - name: reports_requestId
      in: path
      required: true
      schema:
        type: string
  /accounts/{username}/telemetryWebhook/test:
    post:
      tags:
      - Webhook
      summary: Test Endpoint
      description: "Creates a test telemetry event against your configured webhook to verify connectivity.\n\n**Required variables**\n\
        \n- `username` – the UltraDNS account name (may differ from your login username)\n    \n- `webhook_endpointUrl` –
        the URL to receive the test event\n    \n\nA post‑request script automatically extracts `telemetryEventId` from the
        JSON response and saves it to the `webhook_telemetryId` environment variable. Use that value with the Verify endpoint
        to confirm delivery."
      operationId: testEndpoint
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  example: TEST_TELEMETRY_WEBHOOK
                url:
                  type: string
                  example: '{{webhook_endpointUrl}}'
            examples:
              Test Endpoint:
                value:
                  type: TEST_TELEMETRY_WEBHOOK
                  url: '{{webhook_endpointUrl}}'
      responses:
        '201':
          description: Test Endpoint
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:00:12 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountName:
                    type: string
                    example: postman-example
                  environment:
                    type: string
                    example: ''
                  telemetryEventId:
                    type: string
                    example: a7dc9223-cdff-4435-acfd-0f8df342f844
                  telemetryEventTime:
                    type: string
                    example: '2025-06-18 12:00:13.224'
                  telemetryEventType:
                    type: string
                    example: TEST_TELEMETRY_WEBHOOK
              examples:
                Test Endpoint:
                  value:
                    accountName: postman-example
                    environment: ''
                    telemetryEventId: a7dc9223-cdff-4435-acfd-0f8df342f844
                    telemetryEventTime: '2025-06-18 12:00:13.224'
                    telemetryEventType: TEST_TELEMETRY_WEBHOOK
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
  /accounts/{username}/telemetryWebhook/test/{webhook_telemetryId}:
    get:
      tags:
      - Webhook
      summary: Verify
      description: Verifies delivery of a test telemetry event to your webhook. Requires the `username` (account name) 
        and `webhook_telemetryId` (saved by the Test endpoint’s script). Returns a JSON payload indicating success or 
        error details.
      operationId: verify
      responses:
        '200':
          description: Verify
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '20'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:00:29 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: Unknown
              examples:
                Verify:
                  value:
                    status: Unknown
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
    - name: webhook_telemetryId
      in: path
      required: true
      schema:
        type: string
  /accounts/{username}/settings/PUSH_NOTIFICATIONS:
    post:
      tags:
      - Webhook
      summary: Create
      description: "Creates a push‑notification webhook configuration that delivers telemetry events for all account changes.\n\
        \n**Requires:**\n\n- `username` – the UltraDNS account name\n    \n- `webhook_endpointUrl` – the URL to receive live
        notifications\n    \n\nBy default, this enables notifications for `ALL_CHANGES`. On success, returns the created webhook
        configuration in the response payload."
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                webhooks:
                  type: array
                  items:
                    type: object
                    properties:
                      enable:
                        type: boolean
                        example: true
                      include:
                        type: object
                        properties:
                          ALL_CHANGES:
                            type: boolean
                            example: true
                      url:
                        type: string
                        example: '{{webhook_endpointUrl}}'
                  example:
                  - enable: true
                    include:
                      ALL_CHANGES: true
                    url: '{{webhook_endpointUrl}}'
            examples:
              Create:
                value:
                  webhooks:
                  - enable: true
                    include:
                      ALL_CHANGES: true
                    url: '{{webhook_endpointUrl}}'
      responses:
        '201':
          description: Create
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '24'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:00:47 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Create:
                  value:
                    message: Successful
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
  /accounts/{username}/settings/DNSSEC_SETTINGS:
    put:
      tags:
      - DNSSEC Multi-Signer
      summary: Update DNSSEC Settings Copy
      description: "UltraDNS allows the configuration of some default values to be used when signing a zone. These  \nconfigurations
        are then set for DNSSEC signing of every zone in the account:\n\n- DNSKEY TTL - The Time to Live (TTL) in seconds,
        used for the DNSKEY resource record set. Default value is 86400 (1 day) with valid values in the range of 300-172800
        seconds (5 minutes - 2 days).\n    \n- RRSIG Validity Period - Sets the RRSIG validity interval, in days when signing
        responses. Default value of 14 (2 weeks), with valid values in the range of 5-30 (days).\n    \n\nThese default value
        preferences can be set using the API as shown below. Once set, these values will be used for every zone signing, rollover,
        and resigning action on every zone in the account.\n\nNOTE: Use the Initialize (POST) API call to initially set these
        values and the Remove (DELETE) API call to delete them."
      operationId: updateDnssecSettingsCopy
      requestBody:
        content:
          application/json:
            examples:
              Update DNSSEC Settings Copy:
                value: "{\r\n    \"dnssecSettings\": {\r\n        \"dnskeyTtl\": {{dnssec_dnskey_ttl}},\r\n        \"rrsigValidity\"\
                  : {{dnssec_rrsig_validity}} \r\n    }\r\n}"
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Update DNSSEC Settings Copy
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '24'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:02:15 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Update DNSSEC Settings Copy:
                  value:
                    message: Successful
    post:
      tags:
      - DNSSEC Multi-Signer
      summary: Initialize DNSSEC Settings
      description: "UltraDNS allows the configuration of some default values to be used when signing a zone. These  \nconfigurations
        are then set for DNSSEC signing of every zone in the account:\n\n- DNSKEY TTL - The Time to Live (TTL) in seconds,
        used for the DNSKEY resource record set. Default value is 86400 (1 day) with valid values in the range of 300-172800
        seconds (5 minutes - 2 days).\n    \n- RRSIG Validity Period - Sets the RRSIG validity interval, in days when signing
        responses. Default value of 14 (2 weeks), with valid values in the range of 5-30 (days).\n    \n\nThese default value
        preferences can be set using the API as shown below. Once set, these values will be used for every zone signing, rollover,
        and resigning action on every zone in the account.\n\nNOTE: If you have previously set these values with a call to
        this API then you will need to use the Update (PUT) API call to update them and the Remove (DELETE) API call to delete
        them."
      operationId: initializeDnssecSettings
      requestBody:
        content:
          application/json:
            examples:
              Initialize DNSSEC Settings:
                value: "{\r\n    \"dnssecSettings\": {\r\n        \"dnskeyTtl\": {{dnssec_dnskey_ttl}},\r\n        \"rrsigValidity\"\
                  : {{dnssec_rrsig_validity}} \r\n    }\r\n}"
            schema:
              type: object
              additionalProperties: true
      responses:
        '201':
          description: Initialize DNSSEC Settings
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Length:
              schema:
                type: string
                example: '24'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:01:57 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Initialize DNSSEC Settings:
                  value:
                    message: Successful
    delete:
      tags:
      - DNSSEC Multi-Signer
      summary: Remove DNSSEC Settings
      description: "UltraDNS allows the configuration of some default values to be used when signing a zone. These  \nconfigurations
        are then set for DNSSEC signing of every zone in the account:\n\n- DNSKEY TTL - The Time to Live (TTL) in seconds,
        used for the DNSKEY resource record set. Default value is 86400 (1 day) with valid values in the range of 300-172800
        seconds (5 minutes - 2 days).\n    \n- RRSIG Validity Period - Sets the RRSIG validity interval, in days when signing
        responses. Default value of 14 (2 weeks), with valid values in the range of 5-30 (days).\n    \n\nThese default value
        preferences can be set using the API as shown below. Once set, these values will be used for every zone signing, rollover,
        and resigning action on every zone in the account.\n\nNOTE: Use the Initialize (POST) API call to initially set these
        values and the Update (PUT) API call to update them."
      operationId: removeDnssecSettings
      responses:
        '204':
          description: Remove DNSSEC Settings
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:16:35 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                Remove DNSSEC Settings:
                  value: ''
    parameters:
    - name: username
      in: path
      required: true
      schema:
        type: string
  /zones/{zones_zoneName}/dnssec:
    get:
      tags:
      - DNSSEC Multi-Signer
      summary: Get DS Records
      description: Provides detailed information regarding the current DNSSEC status of a zone. This API call can be 
        used to get the DS (Designated Signer) records for the zone that can be used by the parent zone to establish a 
        chain-of-trust for the zone.
      operationId: getDsRecords
      responses:
        '200':
          description: Get DS Records
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: Close
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:02:47 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  keys:
                    type: array
                    items:
                      type: object
                      properties:
                        bitLength:
                          type: number
                          example: 256
                        created:
                          type: string
                          example: '2025-06-18T00:02:34Z'
                        dnsKeyRecord:
                          type: string
                          example: domain.com. 172800 IN DNSKEY 256 3 13 
                            q5wE5b6RtDeR0vY553t+V6k3+T1jZ5UDiDfXhtKgkbrBQJvUd0yklPkTGqKzehg8OJRxLdCttM0uYn4PreB5Ng==
                        dsRecords:
                          type: array
                          items:
                            type: string
                            example: 17461 13 1 63F11070CADCF0E36AA32561192A62C7F129531A
                          example:
                          - 17461 13 1 63F11070CADCF0E36AA32561192A62C7F129531A
                          - 17461 13 2 56F7230A6F4B4C2113AB46F134C5FDDDAF551FAD82DD2607ECDCF9BF7C94AF33
                        keyId:
                          type: number
                          example: 53083
                        keyRolloverFrequency:
                          type: number
                          example: 30
                        nextRoll:
                          type: string
                          example: '2025-07-18T00:02:34Z'
                        publicKey:
                          type: string
                          example: 
                            q5wE5b6RtDeR0vY553t+V6k3+T1jZ5UDiDfXhtKgkbrBQJvUd0yklPkTGqKzehg8OJRxLdCttM0uYn4PreB5Ng==
                        status:
                          type: string
                          example: CURRENT
                        type:
                          type: string
                          example: ZSK
                    example:
                    - bitLength: 256
                      created: '2025-06-18T00:02:34Z'
                      dnsKeyRecord: domain.com. 172800 IN DNSKEY 256 3 13 
                        q5wE5b6RtDeR0vY553t+V6k3+T1jZ5UDiDfXhtKgkbrBQJvUd0yklPkTGqKzehg8OJRxLdCttM0uYn4PreB5Ng==
                      keyId: 53083
                      keyRolloverFrequency: 30
                      nextRoll: '2025-07-18T00:02:34Z'
                      publicKey: 
                        q5wE5b6RtDeR0vY553t+V6k3+T1jZ5UDiDfXhtKgkbrBQJvUd0yklPkTGqKzehg8OJRxLdCttM0uYn4PreB5Ng==
                      status: CURRENT
                      type: ZSK
                    - bitLength: 256
                      created: '2025-06-18T00:02:34Z'
                      dnsKeyRecord: domain.com. 172800 IN DNSKEY 257 3 13 
                        zcF4e9AjcvGpBD3q4wvObit/Zg7P2+PGkXDoCrECz5n6kgVxoptvxIQHaFC39lEo8Q1mQM3t6uMna/v0/SSmog==
                      dsRecords:
                      - 17461 13 1 63F11070CADCF0E36AA32561192A62C7F129531A
                      - 17461 13 2 56F7230A6F4B4C2113AB46F134C5FDDDAF551FAD82DD2607ECDCF9BF7C94AF33
                      keyId: 17461
                      keyRolloverFrequency: 365
                      nextRoll: '2026-06-18T00:02:34Z'
                      publicKey: 
                        zcF4e9AjcvGpBD3q4wvObit/Zg7P2+PGkXDoCrECz5n6kgVxoptvxIQHaFC39lEo8Q1mQM3t6uMna/v0/SSmog==
                      status: CURRENT
                      type: KSK
                  lastModifiedDateTime:
                    type: string
                    example: '2025-06-18T00:02:34Z'
                  lastModifiedZoneDateTime:
                    type: string
                    example: '2025-06-18T00:02:34Z'
                  policy:
                    type: object
                    properties:
                      algorithm:
                        type: string
                        example: ECDSAP256SHA256
                      dnskeyTtl:
                        type: number
                        example: 172800
                      keyPolicy:
                        type: array
                        items:
                          type: object
                          properties:
                            bitLength:
                              type: number
                              example: 256
                            keyRolloverFrequency:
                              type: number
                              example: 30
                            type:
                              type: string
                              example: ZSK
                        example:
                        - bitLength: 256
                          keyRolloverFrequency: 30
                          type: ZSK
                        - bitLength: 256
                          keyRolloverFrequency: 365
                          type: KSK
                      rrsigSignatureDuration:
                        type: number
                        example: 30
                      securityType:
                        type: string
                        example: NSEC_ON_THE_FLY
                  resignNeeded:
                    type: boolean
                    example: false
                  status:
                    type: string
                    example: SIGNED
              examples:
                Get DS Records:
                  value:
                    keys:
                    - bitLength: 256
                      created: '2025-06-18T00:02:34Z'
                      dnsKeyRecord: domain.com. 172800 IN DNSKEY 256 3 13 
                        q5wE5b6RtDeR0vY553t+V6k3+T1jZ5UDiDfXhtKgkbrBQJvUd0yklPkTGqKzehg8OJRxLdCttM0uYn4PreB5Ng==
                      keyId: 53083
                      keyRolloverFrequency: 30
                      nextRoll: '2025-07-18T00:02:34Z'
                      publicKey: 
                        q5wE5b6RtDeR0vY553t+V6k3+T1jZ5UDiDfXhtKgkbrBQJvUd0yklPkTGqKzehg8OJRxLdCttM0uYn4PreB5Ng==
                      status: CURRENT
                      type: ZSK
                    - bitLength: 256
                      created: '2025-06-18T00:02:34Z'
                      dnsKeyRecord: domain.com. 172800 IN DNSKEY 257 3 13 
                        zcF4e9AjcvGpBD3q4wvObit/Zg7P2+PGkXDoCrECz5n6kgVxoptvxIQHaFC39lEo8Q1mQM3t6uMna/v0/SSmog==
                      dsRecords:
                      - 17461 13 1 63F11070CADCF0E36AA32561192A62C7F129531A
                      - 17461 13 2 56F7230A6F4B4C2113AB46F134C5FDDDAF551FAD82DD2607ECDCF9BF7C94AF33
                      keyId: 17461
                      keyRolloverFrequency: 365
                      nextRoll: '2026-06-18T00:02:34Z'
                      publicKey: 
                        zcF4e9AjcvGpBD3q4wvObit/Zg7P2+PGkXDoCrECz5n6kgVxoptvxIQHaFC39lEo8Q1mQM3t6uMna/v0/SSmog==
                      status: CURRENT
                      type: KSK
                    lastModifiedDateTime: '2025-06-18T00:02:34Z'
                    lastModifiedZoneDateTime: '2025-06-18T00:02:34Z'
                    policy:
                      algorithm: ECDSAP256SHA256
                      dnskeyTtl: 172800
                      keyPolicy:
                      - bitLength: 256
                        keyRolloverFrequency: 30
                        type: ZSK
                      - bitLength: 256
                        keyRolloverFrequency: 365
                        type: KSK
                      rrsigSignatureDuration: 30
                      securityType: NSEC_ON_THE_FLY
                    resignNeeded: false
                    status: SIGNED
    put:
      tags:
      - DNSSEC Multi-Signer
      summary: Update External Signer
      description: "Configure external signer keys (KSK and ZSK) for a DNSSEC signed zone. KSK and ZSK DNSKEY records are
        formatted as follows:\n\n```\n<FLAGS> <PROTOCOL_VALUE> <ALGORITHM> <BASE64_ENCODED_PUBLIC_KEY>\n\n ```\n\nNOTE: For
        an unsigned zone you can change the method to POST and set the value of _externalKeys_ to both DNSSEC sign a zone
        and install the DNSKEY records from an external provider."
      operationId: updateExternalSigner
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                externalKeys:
                  type: array
                  items: {}
                  example: []
            examples:
              Remove External Signer:
                value:
                  externalKeys: []
              Update External Signer:
                value:
                  externalKeys:
                  - ksk:
                    - '{{dnssec_extkey_ksk}}'
                    zsk:
                    - '{{dnssec_extkey_zsk}}'
      responses:
        '200':
          description: Update External Signer / Remove External Signer
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '42'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:16:11 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Remove External Signer:
                  value:
                    message: Successful
                Update External Signer:
                  value:
                    message: Successful
    post:
      tags:
      - DNSSEC Multi-Signer
      summary: DNSSEC Sign Zone
      description: "This API is used to DNSSEC sign a zone on UltraDNS and can be used on both primary and secondary zones.\n\
        \nIf you have external signer DNSKEY information you can include that as an _externalKeys_ element in the JSON payload
        (see [Update External Signer](https://go.postman.co/workspace/My-Workspace~44d8667f-697e-43dd-8c23-aea1d7afb89c/documentation/269716-96acc28c-c730-4484-9a15-43f2bb753d3a?entity=request-09c10a66-1e56-4e2f-8504-9f15c8dd7766)),
        otherwise the payload is empty."
      operationId: dnssecSignZone
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
            examples:
              DNSSEC Sign Zone:
                value: {}
      responses:
        '201':
          description: DNSSEC Sign Zone
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:02:33 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                DNSSEC Sign Zone:
                  value:
                    message: Successful
    delete:
      tags:
      - DNSSEC Multi-Signer
      summary: DNSSEC Un-Sign Zone
      description: This API call will unsign a DNSSEC signed zone, removing all DNSKEY information (including external 
        keys).
      operationId: dnssecUnSignZone
      responses:
        '204':
          description: DNSSEC Un-Sign Zone
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:16:26 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Access-Control-Request-Headers
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            text/plain:
              examples:
                DNSSEC Un-Sign Zone:
                  value: ''
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
  /zones/{zones_zoneName}/rrsets/{sb_rrType}/{sb_ownerName}:
    post:
      tags:
      - Traffic Management
      - SiteBacker
      summary: Create SiteBacker Pool
      description: "**Overview**  \n  \nCreates a new SiteBacker pool under the specified zone and record owner. The request
        body must include:\n\n- **rdata**: an array of IP addresses to include in the pool\n    \n- **rdataInfo**: one object
        per IP with:\n    \n    - `state` (NORMAL, FORCE_ACTIVE, FORCE_FAIL)\n        \n    - `runProbes` (true / false)\n\
        \        \n    - `priority` (positive integer)\n        \n    - `failoverDelay` (0 or positive integer)\n        \n\
        \    - `threshold` (positive integer)\n        \n    - `availableToServe` (true / false)\n        \n- **backupRecords**:
        an array of fallback records, each with:\n    \n    - `rdata` (IP address)\n        \n    - `failoverDelay` (0 or
        positive integer)"
      operationId: createSitebackerPool
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile:
                  type: object
                  properties:
                    '@context':
                      type: string
                      example: http://schemas.ultradns.com/SBPool.jsonschema
                    actOnProbes:
                      type: boolean
                      example: true
                    backupRecords:
                      type: array
                      items:
                        type: object
                        properties:
                          failoverDelay:
                            type: number
                            example: 0
                          rdata:
                            type: string
                            example: 9.9.9.9
                      example:
                      - failoverDelay: 0
                        rdata: 9.9.9.9
                    description:
                      type: string
                      example: Test SiteBacker Pool
                    failureThreshold:
                      type: number
                      example: 0
                    maxActive:
                      type: number
                      example: 1
                    maxServed:
                      type: number
                      example: 1
                    order:
                      type: string
                      example: FIXED
                    rdataInfo:
                      type: array
                      items:
                        type: object
                        properties:
                          availableToServe:
                            type: boolean
                            example: true
                          failoverDelay:
                            type: number
                            example: 0
                          priority:
                            type: number
                            example: 1
                          runProbes:
                            type: boolean
                            example: true
                          state:
                            type: string
                            example: NORMAL
                          threshold:
                            type: number
                            example: 1
                      example:
                      - availableToServe: true
                        failoverDelay: 0
                        priority: 1
                        runProbes: true
                        state: NORMAL
                        threshold: 1
                      - availableToServe: true
                        failoverDelay: 0
                        priority: 1
                        runProbes: true
                        state: NORMAL
                        threshold: 1
                      - availableToServe: true
                        failoverDelay: 0
                        priority: 1
                        runProbes: true
                        state: NORMAL
                        threshold: 1
                      - availableToServe: true
                        failoverDelay: 0
                        priority: 1
                        runProbes: true
                        state: NORMAL
                        threshold: 1
                    runProbes:
                      type: boolean
                      example: true
                rdata:
                  type: array
                  items:
                    type: string
                    example: 1.1.1.1
                  example:
                  - 1.1.1.1
                  - 2.2.2.2
                  - 3.3.3.3
                  - 4.4.4.4
                ttl:
                  type: number
                  example: 300
            examples:
              Create SiteBacker Pool:
                value:
                  profile:
                    '@context': http://schemas.ultradns.com/SBPool.jsonschema
                    actOnProbes: true
                    backupRecords:
                    - failoverDelay: 0
                      rdata: 9.9.9.9
                    description: Test SiteBacker Pool
                    failureThreshold: 0
                    maxActive: 1
                    maxServed: 1
                    order: FIXED
                    rdataInfo:
                    - availableToServe: true
                      failoverDelay: 0
                      priority: 1
                      runProbes: true
                      state: NORMAL
                      threshold: 1
                    - availableToServe: true
                      failoverDelay: 0
                      priority: 1
                      runProbes: true
                      state: NORMAL
                      threshold: 1
                    - availableToServe: true
                      failoverDelay: 0
                      priority: 1
                      runProbes: true
                      state: NORMAL
                      threshold: 1
                    - availableToServe: true
                      failoverDelay: 0
                      priority: 1
                      runProbes: true
                      state: NORMAL
                      threshold: 1
                    runProbes: true
                  rdata:
                  - 1.1.1.1
                  - 2.2.2.2
                  - 3.3.3.3
                  - 4.4.4.4
                  ttl: 300
      responses:
        '201':
          description: Create SiteBacker Pool
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:32:33 GMT
            Location:
              schema:
                type: string
                example: http://api.ultradns.com/zones/domain.com/rrsets/A/sitebacker
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
            transfer-encoding:
              schema:
                type: string
                example: chunked
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Create SiteBacker Pool:
                  value:
                    message: Successful
    patch:
      tags:
      - Traffic Management
      - SiteBacker
      summary: Record Priority Update
      description: "**Overview**  \n  \nUpdates the failover/load‑order priority of a single member in a SiteBacker pool.
        The member is selected by its index in the pool’s member list (the “path” parameter):\n\n- **Index 0** targets the
        first (lowest‑priority) record\n    \n- **Index 1** targets the second record\n    \n- And so on for larger pools\n\
        \    \n\nChanging the member’s `priority` value determines its position in the failover or load‑balancing sequence.\n\
        \n**Usage Notes**\n\n- In a simple two‑member pool (e.g. priorities 1 and 101), you can swap their roles by PATCHing
        each index without altering the request body.\n    \n- For pools with more than two members, adjust each member’s
        `priority` to reflect the exact ordering you need."
      operationId: recordPriorityUpdate
      requestBody:
        content:
          application/json:
            examples:
              Record Priority Update:
                value: "[\r\n    // JSON DTO (pool record with lowest value for priority field.\r\n    {\r\n        \"op\"\
                  : \"replace\",\r\n        \"path\": \"/profile/rdataInfo/0/priority\",\r\n        \"value\": \"101\"\r\n\
                  \    },\r\n    // JSON DTO (pool record with the next highest value for priority field.\r\n    {\r\n   \
                  \     \"op\": \"replace\",\r\n        \"path\": \"/profile/rdataInfo/1/priority\",\r\n        \"value\"\
                  : \"1\"\r\n    }\r\n]"
            schema:
              type: object
              additionalProperties: true
      responses:
        '200':
          description: Record Priority Update
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
                example: Origin, X-Requested-With, Content-Type, Accept, Authorization, UltraClient
            Access-Control-Allow-Methods:
              schema:
                type: string
                example: POST, GET, OPTIONS, DELETE, PUT, PATCH
            Access-Control-Allow-Origin:
              schema:
                type: string
                example: '*'
            Access-Control-Max-Age:
              schema:
                type: string
                example: '3600'
            Connection:
              schema:
                type: string
                example: keep-alive
            Content-Encoding:
              schema:
                type: string
                example: gzip
            Content-Length:
              schema:
                type: string
                example: '42'
            Content-Security-Policy:
              schema:
                type: string
                example: "default-src 'self' https:; font-src 'self' https: data:; img-src 'self' https: data:; object-src
                  'none'; script-src https:; style-src 'self' https: 'unsafe-inline'"
            Date:
              schema:
                type: string
                example: Wed, 18 Jun 2025 00:32:55 GMT
            Referrer-Policy:
              schema:
                type: string
                example: no-referrer
            Strict-Transport-Security:
              schema:
                type: string
                example: max-age=31536000; includeSubDomains; preload
            Vary:
              schema:
                type: string
                example: Accept-Encoding, User-Agent
            X-Content-Type-Options:
              schema:
                type: string
                example: nosniff
            X-Download-Options:
              schema:
                type: string
                example: noopen
            X-Frame-Options:
              schema:
                type: string
                example: DENY
            X-Permitted-Cross-Domain-Policies:
              schema:
                type: string
                example: none
            X-Xss-Protection:
              schema:
                type: string
                example: 1 ; mode=block
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successful
              examples:
                Record Priority Update:
                  value:
                    message: Successful
    parameters:
    - name: zones_zoneName
      in: path
      required: true
      schema:
        type: string
    - name: sb_rrType
      in: path
      required: true
      schema:
        type: string
    - name: sb_ownerName
      in: path
      required: true
      schema:
        type: string
components:
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        password:
          tokenUrl: https://api.ultradns.com/authorization/token
          scopes: {}
security:
- oauth2: []
tags:
- name: Authorization
  description: "This folder contains endpoints for obtaining and refreshing authentication tokens for the UltraDNS REST API
    using the Resource Owner Password Credentials (ROPC) grant, a legacy subset of OAuth 2.0. These requests require a valid
    UltraDNS API username and password.\n\nFailed login attempts may lock the account for a period of time; if this occurs,
    wait until the lockout expires or contact Customer Support. Users with “API Only Access” cannot log into the UltraDNS
    Portal but can authenticate to the API."
- name: Platform
  description: "This folder contains endpoints that provide information about the UltraDNS API platform itself.\n\n- Check
    API operational status and health\n    \n- Retrieve current API version information\n    \n- Validate connectivity to
    the service\n    \n\nThese endpoints are intended for integration health checks, monitoring, and ensuring compatibility
    with the current API version."
- name: Zones
  description: "This endpoint contains all operations for managing the lifecycle and metadata of your DNS zones.\n\n- **Create**
    new zones\n    \n- **Retrieve** zone details and metadata\n    \n- **Update** zone configuration\n    \n- **Delete** existing
    zones\n    \n- **Export** zone files\n    \n- **Capture** zone snapshots\n    \n\nEverything here is focused on DNS zone
    management and its associated metadata."
- name: Records
  description: "Endpoints for managing resource record sets (RRSets) within a DNS zone. Each RRSet groups records sharing
    the same owner name, type, and class (always IN). Record data is handled via the `rdata` array, which follows the BIND
    presentation format.\n\n- **List** all RRSets in a zone\n    \n- **Retrieve** a specific RRSet by owner name and type\n\
    \    \n- **Create/Update** RRSets by supplying `rdata` entries and TTL\n    \n- **Delete** RRSets"
- name: Tasks
  description: "Endpoints for monitoring asynchronous background tasks (e.g., zone snapshots or exports):\n\n- When you invoke
    an operation that returns **202 Accepted**, the response headers include an `x-task-id`.\n    \n- Use these endpoints
    to:\n    \n    - **Check status** of the task referenced by `{{currentTask}}`\n        \n    - **Retrieve results** once
    the task completes"
- name: Reports
  description: "Endpoints for generating and fetching DNS analytics reports:\n\n- **Create a report**\n    \n    - `POST /reports`
    (or similar)\n        \n    - Response body includes a JSON `id` for your report\n        \n- **Check report status &
    retrieve results**\n    \n    - `GET /reports/requests/{{currentReport}}`\n        \n    - Returns the current state (pending,
    complete, failed) and, once ready, the report data"
- name: Webhook
  description: "Endpoints for managing UDNS push‑notification webhooks:\n\n- **Create Webhook**\n    \n    Sends your `url`,
    `headers`, and event filters to UDNS. (No prior validation required, but you’ll typically want to test first.)\n    \n\
    - **Test Webhook**\n    \n    Triggers a sample telemetry event to your configured endpoint.\n    \n    - On success,
    the response body returns an `eventId`\n        \n- **Verify Webhook Event**\n    \n    Polls `/webhooks/events/{{currentWebhookEventId}}`
    to confirm delivery status and any response details."
- name: DNSSEC Multi-Signer
  description: "UltraDNS API endpoints that support [multi-signer DNSSEC](https://ultra-portalstatic.ultradns.com/static/console/docs/DNSSEC-Multi_Signer-Guide.pdf).\n\
    \nUltraDNS DNSSEC uses _online_ (also known as _on-the-fly_) signing in generating signed responses to queries. UltraDNS
    supports DNSSEC algorithm 13 only for this process. Implementers of multi-signer can add DNSKEY details for external signers
    using other algorithms as needed, but all UltraDNS generated key information uses algorithm 13 (ECDSA).\n\nAdditionally,
    UltraDNS signers generate a unique KSK and ZSK for every zone. This approach gives flexibility for zone owners to roll
    their KSK without impacting other zones that share the KSK information and allows the ZSK to be automatically rolled at
    regular intervals. The implementation of multi-signer follows the methods described in [RFC 8901 model 2](https://www.rfc-editor.org/rfc/rfc8901.html#name-model-2-unique-ksk-set-and-)
    where each signer maintains its own unique KSK and ZSK.\n\nSupport of DNSSEC Multi-Signer is derived from, and supports
    portions of the following RFCs:\n\n- [RFC 8901](https://www.rfc-editor.org/rfc/rfc8901.html) - Multi-Signer DNSSEC Models.\n\
    \    \n- [RFC 7344](https://www.rfc-editor.org/rfc/rfc7344) - Automating DNSSEC Delegation Trust Maintenance.\n    \n\
    - [RFC 8078](https://www.rfc-editor.org/rfc/rfc8078) - Managing DS Records from the Parent via CDS/CDNSKEY.\n    \n- [RFC
    6781](https://www.rfc-editor.org/rfc/rfc6781.html) - DNSSEC Operational Practices, Version 2."
- name: Traffic Management
  description: "Endpoints supporting UltraDNS’s advanced traffic‑management features.\n\n- **SiteBacker**: Configure health‑check
    probes that monitor endpoints and automatically steer traffic away from failures\n    \n- **Direction**: Cet up geography‑aware
    routing so queries resolve to the closest or best‑suited data center\n    \n- **Traffic Controller**: Create load‑balancing
    rules to distribute DNS traffic across multiple targets based on weight, priority, or custom logic"
- name: SiteBacker
  description: "Endpoints for managing SiteBacker pools—a traffic‑management feature that groups multiple IPs under one DNS
    record and uses health‑check probes to steer queries based on endpoint health and defined priorities.\n\n- **Create Pool**:
    Provision a new pool of endpoints for a given zone/record, complete with probe settings and failover rules\n    \n- **Update
    Member Priority**: Reorder pool members to control failover order"
